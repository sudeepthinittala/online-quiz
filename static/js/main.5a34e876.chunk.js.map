{"version":3,"sources":["assets/images/Screenshot (162).png","assets/images/Screenshot (163).png","assets/images/Screenshot (164).png","assets/images/Screenshot (165).png","assets/images/Screenshot (166).png","components/quiz/QuizInstructions.js","components/Home.js","utils/is-empty.js","utils/get-random.js","components/quiz/Play.js","components/quiz/QuizSummary.js","components/Login.js","components/Register.js","App.js","index.js"],"names":["module","exports","QuizInstructions","props","temp","JSON","stringify","location","aboutProps","obj","parse","Helmet","className","text","src","img","width","height","alt","img1","img2","img3","img4","to","pathname","Home","id","isEmpty","value","undefined","Object","keys","length","trim","Random","Math","floor","random","Play","displayQuestions","questions","state","currentQuestion","nextQuestion","previousQuestion","currentQuestionIndex","answer","setState","handlepreviousQuestion","prevState","clicked","changeColor","handlequit","window","confirm","history","push","handlenextQuestion","endGame","sendData","e","a","status","sc","score","numberOfQuestions","fetch","method","body","name","headers","response","json","console","log","error","handleOptionClick","target","innerHTML","correctAnswer","document","getElementById","style","background","wrongAnswer","correctAnswers","numberOfAnsweredQuestions","wrongAnswers","alert","playerStats","setTimeout","questionsarr","this","question","onClick","optionA","optionB","optionC","optionD","Component","QuizSummary","remark","Login","useState","setText","password","setPassword","type","onChange","Register","email","setEmail","retypepassword","retypesetPassword","validateForm","newemail","message","App","path","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5a34e876.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Screenshot (162).77265175.png\";","module.exports = __webpack_public_path__ + \"static/media/Screenshot (163).141d3db5.png\";","module.exports = __webpack_public_path__ + \"static/media/Screenshot (164).82f90a6f.png\";","module.exports = __webpack_public_path__ + \"static/media/Screenshot (165).0701dc65.png\";","module.exports = __webpack_public_path__ + \"static/media/Screenshot (166).080a62a8.png\";","import React, { Fragment} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Helmet} from 'react-helmet';\r\nimport img from '../../assets/images/Screenshot (162).png'\r\nimport img1 from '../../assets/images/Screenshot (163).png'\r\nimport img2 from '../../assets/images/Screenshot (164).png'\r\nimport img3 from '../../assets/images/Screenshot (165).png'\r\nimport img4 from '../../assets/images/Screenshot (166).png'\r\n\r\nconst QuizInstructions =(props)=>{\r\n    const temp=JSON.stringify(props.location.aboutProps);\r\n    const obj=JSON.parse(temp);\r\n    // console.log(props);\r\n    return(\r\n    <Fragment>\r\n    <Helmet><title>Quiz Instructions</title></Helmet>\r\n    <div className=\"instructions container\">\r\n      <h5>Hi! {obj.text}</h5>\r\n        <h1>How to play the game</h1>\r\n    <p>Ensure you read this guide from start to finish</p>\r\n    <ul>\r\n        <li>Every question haas four options</li>\r\n        <li>Quiz has 10 questions</li>\r\n    </ul>\r\n    <br></br>\r\n    <p>Interface for playing quiz</p>\r\n    <img src={img} width=\"1000px\" height=\"500px\" alt=\"img\"/>\r\n    <p>If you click the wrong answer then it displays red in colour</p>\r\n     <img src={img1} width=\"1000px\" height=\"500px\" alt=\"img\"/>\r\n     <p>If you click the right answer then it displays green in colour</p>\r\n      <img src={img2} width=\"1000px\" height=\"500px\" alt=\"img\"/>\r\n      <p>If you want to exit the quiz then you can use quit option below, then it asks for conformation and then it is redirected to home page</p>\r\n       <img src={img3} width=\"1000px\" height=\"500px\" alt=\"img\"/>\r\n    <p>At last after completion of the quiz, score will be displayed as shown in the figure</p>\r\n       <img src={img4} width=\"1000px\" height=\"500px\" alt=\"img\"/>\r\n    <div>\r\n        <span className=\"left\"><Link to=\"/online-quiz/home\"> Take me back</Link></span>\r\n        <span className=\"right\"><Link to= {{pathname:\"/online-quiz/play/quiz\" ,aboutProps:obj.text}} > Next</Link></span>\r\n    </div>\r\n    </div>\r\n    </Fragment>\r\n    );\r\n};\r\nexport default QuizInstructions;","import React, { Fragment } from 'react';\r\nimport {Helmet } from 'react-helmet';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n    return (\r\n       <Fragment>\r\n           <Helmet><title>quiz</title></Helmet>\r\n           <div id=\"home\">\r\n               <section>\r\n                   \r\n                   <h1> Lets Play Quiz! </h1>\r\n                  \r\n                   <div className=\"play-button-container\">\r\n                       \r\n                               <Link className=\"play-button\" to={{pathname:\"/online-quiz/play/instructions/\",aboutProps:{text:\"User\"}}} >\r\n                                   Play\r\n                               </Link>\r\n\r\n                   </div>\r\n                   <div className=\"auth-container\">\r\n                       <Link className=\"auth-buttons\" id=\"login-button\" to=\"/online-quiz/login\">Login</Link>\r\n                       <Link  className=\"auth-buttons\" id=\"signup-button\" to=\"/online-quiz/register\">Register</Link>\r\n                   </div>\r\n               </section>\r\n           </div>\r\n        </Fragment>\r\n    );\r\n};\r\nexport default Home;\r\n","const isEmpty =(value)=> \r\n value=== undefined ||\r\n value==null || \r\n (typeof value === 'object' && Object.keys(value).length===0)||\r\n (typeof value === 'string' && value.trim().length===0)\r\n\r\n export default isEmpty;","// import React from 'react';\r\nfunction Random() {\r\n    var randomNumber = Math.floor(Math.random() * Math.floor(3));\r\n   return randomNumber;\r\n  }\r\n  export default Random;","import React,{Component, Fragment} from 'react';\r\nimport {Helmet} from 'react-helmet';\r\nimport questionsarr from '../../questions.json';\r\nimport isEmpty from '../../utils/is-empty';\r\nimport Random from '../../utils/get-random';\r\n// import M from 'materialize-css';\r\nclass Play extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    const temp=JSON.stringify(props.location.aboutProps);\r\n    const obj=JSON.parse(temp);\r\n        this.state={\r\n            name:obj,\r\n            clicked:false,\r\n           questions:questionsarr[Random()],\r\n           currentQuestion:{},\r\n           nextQuestion:{},\r\n           previousQuestion:{},\r\n           answer:'',\r\n           numberOfQuestions:10,\r\n           numberOfAnsweredQuestions:0,\r\n           currentQuestionIndex:0,\r\n           score:0,\r\n           correctAnswers:0,\r\n           wrongAnswers:0\r\n        };\r\n        // console.log(this.state.name);\r\n    }\r\n    componentDidMount(){\r\n        const {questions,currentQuestion,nextQuestion,previousQuestion} = this.state;\r\n        this.displayQuestions(questions,currentQuestion,nextQuestion,previousQuestion);\r\n    }\r\n    displayQuestions =(questions =this.state.questions,currentQuestion,nextQuestion,previousQuestion)=>{\r\n         \r\n        let {currentQuestionIndex}=this.state;\r\n        if(!isEmpty(this.state.questions)){\r\n            questions=this.state.questions;\r\n            currentQuestion=questions[currentQuestionIndex];\r\n            nextQuestion=questions[currentQuestionIndex+1];\r\n            previousQuestion=questions[currentQuestionIndex-1];\r\n            const answer=currentQuestion.answer;\r\n            this.setState({\r\n                currentQuestion,\r\n                nextQuestion,\r\n                previousQuestion,\r\n                answer\r\n            });\r\n        }\r\n    };\r\n    changeColor(){\r\n        document.getElementById(\"op1\").style.background= '#1da1f2';\r\n        document.getElementById(\"op2\").style.background= '#1da1f2';\r\n        document.getElementById(\"op3\").style.background= '#1da1f2';\r\n        document.getElementById(\"op4\").style.background= '#1da1f2';\r\n    }\r\n    handlepreviousQuestion =()=>{\r\n        this.setState(prevState=>({\r\n            clicked:false\r\n        }));\r\n        if(this.state.previousQuestion!== undefined){\r\n            this.changeColor();\r\n            this.setState(prevState=>({\r\n                currentQuestionIndex: prevState.currentQuestionIndex-1,\r\n            }),()=>{\r\n                this.displayQuestions(this.state.state,this.state.currentQuestion,this.state.nextQuestion,this.state.previousQuestion);\r\n            });\r\n            \r\n        } \r\n    }\r\n    handlequit =()=>{\r\n        if(window.confirm('Are you sure want to Quit?')){\r\n            this.props.history.push('/online-quiz/home/');\r\n        }\r\n    }\r\n    handlenextQuestion= ()=>{\r\n        this.setState(prevState=>({\r\n            clicked:false\r\n        }));\r\n        if(this.state.nextQuestion!== undefined){\r\n        this.changeColor();\r\n        this.setState(prevState=>({\r\n            currentQuestionIndex: prevState.currentQuestionIndex+1,\r\n        }), () =>{\r\n            \r\n            this.displayQuestions(this.state.state,this.state.currentQuestion,this.state.nextQuestion,this.state.previousQuestion);\r\n             \r\n        });\r\n    }\r\n    else{\r\n        this.endGame();\r\n    }   \r\n    }\r\n    sendData = async e => {\r\n        // e.preventDefault();\r\n        var status=\"\";\r\n        // let {state}=this.props.location;\r\n        var sc=(this.state.score/this.state.numberOfQuestions)*100;\r\n        if(sc>=40){\r\n            status=\"pass\";\r\n        }\r\n        else{\r\n            status=\"fail\";\r\n        }\r\n        try {\r\n            const response = await fetch(\r\n                \"https://v1.nocodeapi.com/sudeepthi/google_sheets/ogeeFOPybHOycAsN?tabId=Score\",\r\n                {\r\n                    method: \"post\",\r\n                    body: JSON.stringify([[this.state.name,sc,status]]),\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    }\r\n                }\r\n            );\r\n            const json = await response.json();\r\n            console.log(\"Success:\", JSON.stringify(json));\r\n            // setMessage(\"Success\");\r\n        } catch (error) {\r\n            console.error(\"Error:\", error);\r\n            // setMessage(\"Error\");\r\n        }\r\n    }\r\n    handleOptionClick = (e) => {\r\n        if(this.state.clicked===false){\r\n        if(e.target.innerHTML === this.state.answer){\r\n            this.correctAnswer();\r\n             document.getElementById(e.target.id).style.background= 'green';\r\n        }\r\n        else{\r\n            this.wrongAnswer();\r\n           document.getElementById(e.target.id).style.background= 'red';\r\n        }\r\n        this.setState(prevState=>({\r\n            clicked:!prevState.clicked\r\n        }));\r\n    }\r\n    // console.log(this.state.clicked);\r\n    }\r\n    correctAnswer = () =>{\r\n        this.setState(prevState =>({\r\n            score:prevState.score + 1,\r\n            correctAnswers: prevState.correctAnswers+1,\r\n            // currentQuestionIndex: prevState.currentQuestionIndex+1,\r\n            numberOfAnsweredQuestions: prevState.numberOfAnsweredQuestions+1,\r\n        }));\r\n    }\r\n    wrongAnswer = () =>{\r\n        this.setState(prevState =>({\r\n            wrongAnswers: prevState.wrongAnswers+1,\r\n            // currentQuestionIndex: prevState.currentQuestionIndex+1,\r\n            numberOfAnsweredQuestions: prevState.numberOfAnsweredQuestions+1,\r\n        }));\r\n    }\r\n    endGame =() =>{\r\n        alert(\"Quiz has ended!\");\r\n        const {state}=this;\r\n        const playerStats={\r\n            score:state.score,\r\n            numberOfQuestions:state.numberOfQuestions,\r\n            correctAnswers:state.correctAnswers,\r\n            wrongAnswers:state.wrongAnswers,\r\n            numberOfAnsweredQuestions:state.numberOfAnsweredQuestions,\r\n            name:state.name\r\n        };\r\n        // console.log(playerStats);\r\n        setTimeout(()=>{\r\n            this.props.history.push(\"/online-quiz/play/quizSummary\",playerStats);\r\n        },1000);\r\n        this.sendData();\r\n    }\r\n    render(){\r\n        const {currentQuestion}=this.state;\r\n        return(\r\n            <Fragment>\r\n                <Helmet><title>Quiz Page</title></Helmet>\r\n                <div className=\"questions\">\r\n                    <h3>Quiz</h3>\r\n                    <div>\r\n                        <p>\r\n                            <span >{this.state.currentQuestionIndex+1} of 10</span>\r\n                        </p>\r\n                    </div>\r\n                    <h5>{currentQuestion.question}</h5>\r\n                    <div className=\"options-container\">\r\n                        <p onClick={this.handleOptionClick} className=\"option\" id=\"op1\">{currentQuestion.optionA}</p>\r\n                        <p onClick={this.handleOptionClick} className=\"option\" id=\"op2\">{currentQuestion.optionB}</p>\r\n                    </div>\r\n                    <div className=\"options-container\">\r\n                        <p onClick={this.handleOptionClick} className=\"option\" id=\"op3\">{currentQuestion.optionC}</p>\r\n                        <p onClick={this.handleOptionClick} className=\"option\" id=\"op4\">{currentQuestion.optionD}</p>\r\n                    </div>\r\n                    <div className=\"button-container\">\r\n                        <button onClick={this.handlepreviousQuestion}>Previous</button>\r\n                        <button onClick={this.handlenextQuestion}>Next</button>\r\n                        <button onClick={this.handlequit}>Quit</button>\r\n                    </div>\r\n                </div>\r\n                \r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\nexport default Play;","import React,{Component, Fragment} from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport {Link} from 'react-router-dom';\r\n class QuizSummary extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n           name:props.name,\r\n           numberOfQuestions:10,\r\n           numberOfAnsweredQuestions:0,\r\n           score:0,\r\n           correctAnswers:0,\r\n           wrongAnswers:0\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        const {state} = this.props.location;\r\n        if(state){\r\n        this.setState({\r\n            name:state.name,\r\n            score:(state.score/state.numberOfQuestions) *100,\r\n            numberOfQuestions:10,\r\n           numberOfAnsweredQuestions:state.numberOfAnsweredQuestions,\r\n           correctAnswers:state.correctAnswers,\r\n           wrongAnswers:state.wrongAnswers\r\n        });\r\n        }\r\n    }\r\n    \r\n        \r\n     render(){\r\n    //    const {state}=this.props.location;\r\n       \r\n       let remark;\r\n       if(this.state.score<=30){\r\n        remark='You need to practice more!';\r\n       }else if(this.state.score >30 && this.state.score<=50){\r\n           remark='Better luck next Time!';\r\n       }else if(this.state.score> 50 && this.state.score<=70){\r\n           remark='Can do better!';\r\n       }else if(this.state.score>70 && this.state.score<=85){\r\n           remark='You did Great!';\r\n       }else if(this.state.score>85){\r\n           remark='You are genius!';\r\n       }\r\n    //    this.sendData();\r\n    //    if(state!==undefined){\r\n    //        stats=(\r\n    //            <Fragment>\r\n    //         <h1 className=\"heading\">Quiz has ended</h1>\r\n    //         <div className=\"container\">\r\n    //             <h4>{remark}</h4>\r\n    //             <h2>Your Score: {this.state.score}</h2>\r\n    //             <span className=\"stat left\"> Number of Questions:</span>\r\n    //             <span className=\"stat right\"> {this.state.numberOfQuestions}</span><br></br>\r\n    //             <span className=\"stat left\"> Number of Answered Questions:</span>\r\n    //             <span className=\"stat right\"> {this.state.numberOfAnsweredQuestions}</span><br></br>\r\n    //             <span className=\"stat left\"> Number of Correct Answeres:</span>\r\n    //             <span className=\"stat right\"> {this.state.correctAnswers}</span><br></br>\r\n    //             <span className=\"stat left\"> Number of Wrong Answers:</span>\r\n    //             <span className=\"stat right\"> {this.state.wrongAnswers}</span><br></br>\r\n                \r\n                \r\n    //         </div>\r\n    //         <section className=\"button-container\">\r\n    //             <span><Link className=\"return-button\"to=\"/sudeepthinittala/online-quiz/home\">Return back</Link></span>\r\n    //             <span><Link className=\"play-button\" to={{pathname:\"/sudeepthinittala/online-quiz/play/quiz\" ,aboutProps:this.state.name}}>Play Again</Link></span>\r\n    //         </section>\r\n    //         </Fragment>\r\n    //        );\r\n    //        console.log(1);\r\n    //    }\r\n       \r\n         return (\r\n           <Fragment>\r\n               <Helmet><title>Quiz Summary</title></Helmet>\r\n\r\n            <h1 className=\"heading\">Quiz has ended</h1>\r\n            <div className=\"container\">\r\n                <h4>{remark}</h4>\r\n                <h2>Your Score: {this.state.score}</h2>\r\n                <span className=\"stat left\"> Number of Questions:</span>\r\n                <span className=\"stat right\"> {this.state.numberOfQuestions}</span><br></br>\r\n                <span className=\"stat left\"> Number of Answered Questions:</span>\r\n                <span className=\"stat right\"> {this.state.numberOfAnsweredQuestions}</span><br></br>\r\n                <span className=\"stat left\"> Number of Correct Answeres:</span>\r\n                <span className=\"stat right\"> {this.state.correctAnswers}</span><br></br>\r\n                <span className=\"stat left\"> Number of Wrong Answers:</span>\r\n                <span className=\"stat right\"> {this.state.wrongAnswers}</span><br></br>\r\n                <section className=\"button-container\">\r\n                <span><Link className=\"return-button\"to=\"/online-quiz/home\">Return back</Link></span>\r\n                <span><Link className=\"play-button\" to={{pathname:\"/online-quiz/play/quiz\" ,aboutProps:this.state.name}}>Play Again</Link></span>\r\n            </section>\r\n                \r\n            </div>\r\n           \r\n           </Fragment>\r\n         );\r\n         \r\n     }\r\n }\r\n export default QuizSummary;","import React,{Fragment, useState } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Helmet} from 'react-helmet';\r\n// import ReactToExcel from 'react-html-table-to-excel';\r\n// import Spreadsheet from 'react-spreadsheet';\r\n\r\n\r\n// import XLSX from ;\r\n\r\nconst Login =()=>{\r\n    const [text, setText] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    function validateForm() {\r\n        return (text.length > 0 && password.length > 0);\r\n      }\r\n    \r\n    return (\r\n        <Fragment>\r\n        \r\n            <Helmet><title>login page</title></Helmet>\r\n            <h2>Login</h2>\r\n            <form className=\"login-container\" >\r\n            {/* <table id=\"table-to-xls\"> */}\r\n            \r\n                User Name:\r\n                <input type=\"text\" name=\"text\" value={text} onChange={e => setText(e.target.value)}/>\r\n                \r\n                \r\n                Password:\r\n                <span className=\"tr\"><input type=\"password\" name=\"password\" value={password} onChange={e => setPassword(e.target.value)}/></span>\r\n               \r\n            {/* </table> */}\r\n            <Link to={validateForm()?{ pathname:\"/online-quiz/play/instructions/\",aboutProps:{text}} : {pathname:\"/online-quiz/login\"}}  className=\"submit-button\"  type=\"submit\" value=\"submit\" >Submit</Link>\r\n            </form>\r\n            {/* <ReactToExcel\r\n                table=\"table\"\r\n                filename=\"excelfiles\"\r\n                sheet=\"sheet 1\"\r\n                buttonText=\"export\"\r\n            /> */}\r\n        </Fragment>\r\n    );\r\n   \r\n};\r\nexport default Login;","import React,{Fragment ,useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Helmet} from 'react-helmet';\r\nconst Register =()=>{\r\n    const [text, setText] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [retypepassword, retypesetPassword] = useState(\"\");\r\n    function validateForm() {\r\n        return text.length > 0 && password.length > 0 && password===retypepassword;\r\n      }\r\n      const sendData = async e => {\r\n        // e.preventDefault();\r\n        const name=text;\r\n        const newemail=email;\r\n        const message=password;\r\n        try {\r\n            const response = await fetch(\r\n                \"https://v1.nocodeapi.com/sudeepthi/google_sheets/ogeeFOPybHOycAsN?tabId=UserData\",\r\n                {\r\n                    method: \"post\",\r\n                    body: JSON.stringify([[name, newemail, message]]),\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    }\r\n                }\r\n            );\r\n            const json = await response.json();\r\n            console.log(\"Success:\", JSON.stringify(json));\r\n            // setMessage(\"Success\");\r\n        } catch (error) {\r\n            console.error(\"Error:\", error);\r\n            // setMessage(\"Error\");\r\n        }\r\n        \r\n       \r\n    };\r\n    return (\r\n        <Fragment>\r\n            <Helmet><title>register page</title></Helmet>\r\n            <h2>Register</h2>\r\n            <form className=\"login-container input-form\"  id=\"contact\" name=\"contact\">\r\n            <label>\r\n                User Name:\r\n                <input type=\"text\" value={text} onChange={e => setText(e.target.value)} name=\"name\" />\r\n                Mail id:\r\n                <input type=\"email\" value={email} onChange={e => setEmail(e.target.value)} name=\"mail\" />\r\n                Set Password:\r\n                <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} name=\"password\" />\r\n                Retype Password: \r\n                <input type=\"password\" value={retypepassword} onChange={e => retypesetPassword(e.target.value)}name=\"password\" />\r\n            </label>\r\n           \r\n            <Link to={validateForm()?{ pathname:\"/online-quiz/play/instructions/\",aboutProps:{text}} : {pathname:\"/online-quiz/register\"} }   type=\"submit\" value=\"Send\" ><button className=\"button\" onClick={validateForm && sendData}>Submit</button></Link>\r\n            </form>\r\n        </Fragment>\r\n    );\r\n};\r\nexport default Register;","import React from 'react';\nimport {BrowserRouter as Router, Route } from 'react-router-dom';\nimport QuizInstructions from './components/quiz/QuizInstructions';\nimport Home from './components/Home';\nimport Play from './components/quiz/Play';\nimport QuizSummary from './components/quiz/QuizSummary';\nimport Login from './components/Login';\nimport Register from './components/Register';\n\nfunction App() {\n  return (\n    <Router>\n      <Route path=\"/online-quiz/home\"  component={Home}/>\n      <Route path=\"/online-quiz/play/instructions\"  component={QuizInstructions}/>\n      <Route path=\"/online-quiz/play/quiz\" component={Play}/>\n      <Route path=\"/online-quiz/play/quizSummary\"  component={QuizSummary}/>\n      <Route path=\"/online-quiz/login\"  component={Login}/>\n      <Route path=\"/online-quiz/register\"  component={Register}/>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/styles.scss';\nimport '../node_modules/@mdi/font/css/materialdesignicons.min.css';\nimport '../node_modules/materialize-css/dist/css/materialize.min.css';\nimport '../node_modules/materialize-css/dist/js/materialize.min.js';\n\nimport './styles/styles.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}